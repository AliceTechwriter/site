var keywords = 'BOOLEAN BPISTRING BPSTRING COLOR CSVFILE CSVLINK DATE DATETIME DOUBLE ' + 
    'EXCELFILE EXCELLINK FILE HTMLFILE HTMLLINK IMAGEFILE IMAGELINK INTEGER ' +
    'ISTRING JSONFILE JSONLINK LINK LONG NUMERIC PDFFILE PDFLINK RAWFILE RAWLINK ' +
    'RICHTEXT STRING TABLEFILE TABLELINK TEXT TIME WORDFILE WORDLINK XMLFILE XMLLINK YEAR ' +

    'ABSTRACT ACTION ACTIVATE ACTIVE AFTER AGGR ALL AND APPEND APPLY AS ASK ASON ' +
    'ASYNCUPDATE ATTACH ATTR AUTOREFRESH AUTOSET BACKGROUND BCC BEFORE BODY ' +
    'BODYURL BOTTOM BOX BREAK BY CANCEL CANONICALNAME CASE CATCH CC CENTER CHANGE ' +
    'CHANGEABLE CHANGECLASS CHANGED CHANGEKEY CHANGEWYS CHARSET CHARWIDTH CHECK ' +
    'CHECKED CLASS CLASSCHOOSER CLIENT CLOSE COLUMNS COMPLEX CONCAT CONFIRM ' +
    'CONNECTION CONSTRAINT CONSTRAINTFILTER CONTAINERH CONTAINERV CONTEXTMENU ' +
    'COOKIES COOKIESTO CSV CUSTOM CYCLES DATA DBF DEFAULT DEFAULTCOMPARE DELAY ' +
    'DELETE DESC DESIGN DIALOG DO DOC DOCKED DOCX DRAW DRAWROOT DRILLDOWN DROP ' +
    'DROPCHANGED DROPPED ECHO EDIT ELSE EMAIL END EQUAL ESCAPE EVAL EVENTID EVENTS ' +
    'EXCEPTLAST EXCLUSIVE EXEC EXPORT EXTEND EXTERNAL EXTID EXTKEY FALSE FIELDS ' +
    'FILTER FILTERGROUP FILTERGROUPS FILTERS FINALLY FIRST FIXED FLEX FLOAT FOLDER ' +
    'FOOTER FOR FOREGROUND FORM FORMEXTID FORMS FORMULA FROM FULL GET GLOBAL ' +
    'GOAFTER GRID GRIDBOX GROUP GROUPCHANGE HALIGN HEADER HEADERS HEADERSTO HIDE ' +
    'HIDESCROLLBARS HIDETITLE HINTNOUPDATE HINTTABLE HORIZONTAL HTML HTTP IF IMAGE ' +
    'IMPORT IMPOSSIBLE IN INDEX INDEXED INIT INLINE INPUT INTERNAL IS JAVA JOIN ' +
    'JSON KEYPRESS LAST LEFT LIKE LIMIT LIST LOCAL LOGGABLE LSF MANAGESESSION ' +
    'MATERIALIZED MAX MEMO MENU MESSAGE META MIN MODULE MOVE MS MULTI NAGGR NAME ' +
    'NAMESPACE NATIVE NAVIGATOR NESTED NESTEDSESSION NEW NEWEDIT NEWEXECUTOR ' +
    'NEWSESSION NEWSQL NEWTHREAD NO NOCANCEL NOCOMPLEX NOCHANGE NOCONSTRAINTFILTER NODEFAULT ' +
    'NOESCAPE NOFLEX NOHEADER NOHINT NOINLINE NOMANAGESESSION NONULL NOPREVIEW NOT ' +
    'NOWAIT NULL OBJECT OBJECTS OK ON OPTIMISTICASYNC OR ORDER OVERRIDE PAGESIZE ' +
    'PANEL PARAMS PARENT PARTITION PASSWORD PDF PERIOD PG POSITION POST PREREAD PREV ' +
    'PREVIEW PRINT PRIORITY PROPERTIES PROPERTY PROPORTION PUT QUERYCLOSE QUERYOK ' +
    'QUICKFILTER READ READONLY READONLYIF RECURSION REFLECTION REGEXP REMOVE ' +
    'REPORT REPORTFILES REQUEST REQUIRE RESOLVE RETURN RGB RIGHT ROOT ROUND RTF ' +
    'SCHEDULE SCROLL SEEK SELECTOR SERIALIZABLE SET SETCHANGED SETDROPPED SHEET ' +
    'SHOW SHOWDEP SHOWIF SHOWTYPE SINGLE SPLITH SPLITV SQL START STEP STRETCH ' +
    'STRICT STRUCT SUBJECT SUBREPORT SUM TAB TABBED TABLE TAG TEXTHALIGN ' +
    'TEXTVALIGN THEN THREADS TO TOOLBAR TOOLBARBOX TOOLBARLEFT TOOLBARRIGHT ' +
    'TOOLBARSYSTEM TOP TREE TRUE TRY UNGROUP USERFILTER VALIGN VALUE VERTICAL VIEW ' +
    'WAIT WHEN WHERE WHILE WINDOW WRITE XLS XLSX XML XOR YES YESNO';

var keyword_regex = new RegExp('\\b' + keywords.split(/\s+/).join('\\b|\\b') + '\\b');

CodeMirror.defineSimpleMode('fusion', { 
    start: [
        { regex: keyword_regex, token: 'keyword' },

        { regex: /\b\d+[.]\d*[dD]\b/, token: 'number' }, // double literal
        { regex: /\b\d+[.]\d*\b/, token: 'number' }, // numeric literal
        { regex: /\b\d+[Ll]?\b/, token: 'number' }, // int literal 
        { regex: /\b\d\d\d\d[_]\d\d[_]\d\d[_]\d\d[:]\d\d\b/, token: 'number' }, // datetime literal
        { regex: /\b\d\d\d\d[_]\d\d[_]\d\d\b/, token: 'number' }, // date literal
        { regex: /\b\d\d[:]\d\d\b/, token: 'number' }, // time literal 
        { regex: /#[0-9A-Fa-f]{6}\b/, token: 'number' }, // color literal

        { regex: /###?/, token: 'meta' },
        { regex: /@\w+([.]\w+)?\s*/, token: 'meta' },

        { regex: /[']/, token: 'string', next: 'string_mode' }, 
        { regex: /\/\//, token: 'comment', next: 'comment_mode' },
        { regex: /\b[a-zA-Z][_a-zA-Z0-9]*\b/, token: 'variable' }
    ],

    string_mode: [
        { regex: /[^\n\r\\']/, token: 'string' },
        { regex: /\\[rnt\\{}']/, token: 'string'},
        { regex: /[']/, token: 'string', next: 'start'}
    ],

    comment_mode: [
        { regex: /.*$/, token: 'comment', next: 'start' },
    ]
});
